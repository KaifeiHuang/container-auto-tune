/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables;


import com.alipay.autotuneservice.dao.jooq.Keys;
import com.alipay.autotuneservice.dao.jooq.TmaestroLite;
import com.alipay.autotuneservice.dao.jooq.tables.records.TuningParamTaskDataRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row21;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TuningParamTaskData extends TableImpl<TuningParamTaskDataRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>tmaestro-lite.tuning_param_task_data</code>
     */
    public static final TuningParamTaskData TUNING_PARAM_TASK_DATA = new TuningParamTaskData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TuningParamTaskDataRecord> getRecordType() {
        return TuningParamTaskDataRecord.class;
    }

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.pipeline_id</code>.
     */
    public final TableField<TuningParamTaskDataRecord, Integer> PIPELINE_ID = createField(DSL.name("pipeline_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.app_id</code>.
     */
    public final TableField<TuningParamTaskDataRecord, Integer> APP_ID = createField(DSL.name("app_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.app_name</code>.
     */
    public final TableField<TuningParamTaskDataRecord, String> APP_NAME = createField(DSL.name("app_name"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.pods</code>.
     */
    public final TableField<TuningParamTaskDataRecord, String> PODS = createField(DSL.name("pods"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.optimization_type</code>.
     */
    public final TableField<TuningParamTaskDataRecord, String> OPTIMIZATION_TYPE = createField(DSL.name("optimization_type"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.problem_describe</code>.
     */
    public final TableField<TuningParamTaskDataRecord, String> PROBLEM_DESCRIBE = createField(DSL.name("problem_describe"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.problem_type</code>.
     */
    public final TableField<TuningParamTaskDataRecord, String> PROBLEM_TYPE = createField(DSL.name("problem_type"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.direction</code>.
     */
    public final TableField<TuningParamTaskDataRecord, String> DIRECTION = createField(DSL.name("direction"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.trial_nums</code>.
     */
    public final TableField<TuningParamTaskDataRecord, Integer> TRIAL_NUMS = createField(DSL.name("trial_nums"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.trial_params</code>.
     */
    public final TableField<TuningParamTaskDataRecord, String> TRIAL_PARAMS = createField(DSL.name("trial_params"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.max_iter</code>.
     */
    public final TableField<TuningParamTaskDataRecord, Integer> MAX_ITER = createField(DSL.name("max_iter"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.trial_time_min</code>.
     */
    public final TableField<TuningParamTaskDataRecord, Integer> TRIAL_TIME_MIN = createField(DSL.name("trial_time_min"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.trial_time_max</code>.
     */
    public final TableField<TuningParamTaskDataRecord, Integer> TRIAL_TIME_MAX = createField(DSL.name("trial_time_max"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.trial_start_time</code>.
     */
    public final TableField<TuningParamTaskDataRecord, LocalDateTime> TRIAL_START_TIME = createField(DSL.name("trial_start_time"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.trial_stop_time</code>.
     */
    public final TableField<TuningParamTaskDataRecord, LocalDateTime> TRIAL_STOP_TIME = createField(DSL.name("trial_stop_time"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.start_time</code>.
     */
    public final TableField<TuningParamTaskDataRecord, LocalDateTime> START_TIME = createField(DSL.name("start_time"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.end_time</code>.
     */
    public final TableField<TuningParamTaskDataRecord, LocalDateTime> END_TIME = createField(DSL.name("end_time"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.task_status</code>.
     */
    public final TableField<TuningParamTaskDataRecord, String> TASK_STATUS = createField(DSL.name("task_status"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.before_params</code>.
     */
    public final TableField<TuningParamTaskDataRecord, String> BEFORE_PARAMS = createField(DSL.name("before_params"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.modify_time</code>.
     */
    public final TableField<TuningParamTaskDataRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>tmaestro-lite.tuning_param_task_data.compare_pods</code>.
     */
    public final TableField<TuningParamTaskDataRecord, String> COMPARE_PODS = createField(DSL.name("compare_pods"), SQLDataType.VARCHAR(1000), this, "");

    private TuningParamTaskData(Name alias, Table<TuningParamTaskDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private TuningParamTaskData(Name alias, Table<TuningParamTaskDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>tmaestro-lite.tuning_param_task_data</code> table reference
     */
    public TuningParamTaskData(String alias) {
        this(DSL.name(alias), TUNING_PARAM_TASK_DATA);
    }

    /**
     * Create an aliased <code>tmaestro-lite.tuning_param_task_data</code> table reference
     */
    public TuningParamTaskData(Name alias) {
        this(alias, TUNING_PARAM_TASK_DATA);
    }

    /**
     * Create a <code>tmaestro-lite.tuning_param_task_data</code> table reference
     */
    public TuningParamTaskData() {
        this(DSL.name("tuning_param_task_data"), null);
    }

    public <O extends Record> TuningParamTaskData(Table<O> child, ForeignKey<O, TuningParamTaskDataRecord> key) {
        super(child, key, TUNING_PARAM_TASK_DATA);
    }

    @Override
    public Schema getSchema() {
        return TmaestroLite.TMAESTRO_LITE;
    }

    @Override
    public UniqueKey<TuningParamTaskDataRecord> getPrimaryKey() {
        return Keys.KEY_TUNING_PARAM_TASK_DATA_PRIMARY;
    }

    @Override
    public List<UniqueKey<TuningParamTaskDataRecord>> getKeys() {
        return Arrays.<UniqueKey<TuningParamTaskDataRecord>>asList(Keys.KEY_TUNING_PARAM_TASK_DATA_PRIMARY);
    }

    @Override
    public TuningParamTaskData as(String alias) {
        return new TuningParamTaskData(DSL.name(alias), this);
    }

    @Override
    public TuningParamTaskData as(Name alias) {
        return new TuningParamTaskData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TuningParamTaskData rename(String name) {
        return new TuningParamTaskData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TuningParamTaskData rename(Name name) {
        return new TuningParamTaskData(name, null);
    }

    // -------------------------------------------------------------------------
    // Row21 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row21<Integer, Integer, String, String, String, String, String, String, Integer, String, Integer, Integer, Integer, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, String, String, LocalDateTime, String> fieldsRow() {
        return (Row21) super.fieldsRow();
    }
}
