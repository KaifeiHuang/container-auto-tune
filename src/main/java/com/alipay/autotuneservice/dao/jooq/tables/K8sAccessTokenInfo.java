/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables;


import com.alipay.autotuneservice.dao.jooq.Keys;
import com.alipay.autotuneservice.dao.jooq.TmaestroLite;
import com.alipay.autotuneservice.dao.jooq.tables.records.K8sAccessTokenInfoRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * k8s;access token信息表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class K8sAccessTokenInfo extends TableImpl<K8sAccessTokenInfoRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>tmaestro-lite.k8s_access_token_info</code>
     */
    public static final K8sAccessTokenInfo K8S_ACCESS_TOKEN_INFO = new K8sAccessTokenInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<K8sAccessTokenInfoRecord> getRecordType() {
        return K8sAccessTokenInfoRecord.class;
    }

    /**
     * The column <code>tmaestro-lite.k8s_access_token_info.ID</code>. 主键ID
     */
    public final TableField<K8sAccessTokenInfoRecord, Integer> ID = createField(DSL.name("ID"), SQLDataType.INTEGER.nullable(false).identity(true), this, "主键ID");

    /**
     * The column <code>tmaestro-lite.k8s_access_token_info.CREATE_TIME</code>. 创建时间
     */
    public final TableField<K8sAccessTokenInfoRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("CREATE_TIME"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "创建时间");

    /**
     * The column <code>tmaestro-lite.k8s_access_token_info.UPDATED_TIME</code>. 修改时间
     */
    public final TableField<K8sAccessTokenInfoRecord, LocalDateTime> UPDATED_TIME = createField(DSL.name("UPDATED_TIME"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "修改时间");

    /**
     * The column <code>tmaestro-lite.k8s_access_token_info.ACCESS_TOKEN</code>. access;token
     */
    public final TableField<K8sAccessTokenInfoRecord, String> ACCESS_TOKEN = createField(DSL.name("ACCESS_TOKEN"), SQLDataType.VARCHAR(9000).nullable(false), this, "access;token");

    /**
     * The column <code>tmaestro-lite.k8s_access_token_info.ACCESS_KEY_ID</code>. access;key id
     */
    public final TableField<K8sAccessTokenInfoRecord, String> ACCESS_KEY_ID = createField(DSL.name("ACCESS_KEY_ID"), SQLDataType.VARCHAR(128).nullable(false), this, "access;key id");

    /**
     * The column <code>tmaestro-lite.k8s_access_token_info.SECRET_ACCESS_KEY</code>. Secret;Access Key
     */
    public final TableField<K8sAccessTokenInfoRecord, String> SECRET_ACCESS_KEY = createField(DSL.name("SECRET_ACCESS_KEY"), SQLDataType.VARCHAR(3000).nullable(false), this, "Secret;Access Key");

    /**
     * The column <code>tmaestro-lite.k8s_access_token_info.CER</code>. 证书
     */
    public final TableField<K8sAccessTokenInfoRecord, String> CER = createField(DSL.name("CER"), SQLDataType.VARCHAR(5120).nullable(false), this, "证书");

    /**
     * The column <code>tmaestro-lite.k8s_access_token_info.CLUSTER_NAME</code>. 集群名称
     */
    public final TableField<K8sAccessTokenInfoRecord, String> CLUSTER_NAME = createField(DSL.name("CLUSTER_NAME"), SQLDataType.VARCHAR(128).nullable(false), this, "集群名称");

    /**
     * The column <code>tmaestro-lite.k8s_access_token_info.REGION</code>. aws;region
     */
    public final TableField<K8sAccessTokenInfoRecord, String> REGION = createField(DSL.name("REGION"), SQLDataType.VARCHAR(1024).nullable(false), this, "aws;region");

    /**
     * The column <code>tmaestro-lite.k8s_access_token_info.ENDPOINT</code>. aws;endpoint url
     */
    public final TableField<K8sAccessTokenInfoRecord, String> ENDPOINT = createField(DSL.name("ENDPOINT"), SQLDataType.VARCHAR(1024).nullable(false), this, "aws;endpoint url");

    /**
     * The column <code>tmaestro-lite.k8s_access_token_info.CLUSTER_ID</code>. 集群ID
     */
    public final TableField<K8sAccessTokenInfoRecord, String> CLUSTER_ID = createField(DSL.name("CLUSTER_ID"), SQLDataType.VARCHAR(128), this, "集群ID");

    private K8sAccessTokenInfo(Name alias, Table<K8sAccessTokenInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private K8sAccessTokenInfo(Name alias, Table<K8sAccessTokenInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("k8s;access token信息表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>tmaestro-lite.k8s_access_token_info</code> table reference
     */
    public K8sAccessTokenInfo(String alias) {
        this(DSL.name(alias), K8S_ACCESS_TOKEN_INFO);
    }

    /**
     * Create an aliased <code>tmaestro-lite.k8s_access_token_info</code> table reference
     */
    public K8sAccessTokenInfo(Name alias) {
        this(alias, K8S_ACCESS_TOKEN_INFO);
    }

    /**
     * Create a <code>tmaestro-lite.k8s_access_token_info</code> table reference
     */
    public K8sAccessTokenInfo() {
        this(DSL.name("k8s_access_token_info"), null);
    }

    public <O extends Record> K8sAccessTokenInfo(Table<O> child, ForeignKey<O, K8sAccessTokenInfoRecord> key) {
        super(child, key, K8S_ACCESS_TOKEN_INFO);
    }

    @Override
    public Schema getSchema() {
        return TmaestroLite.TMAESTRO_LITE;
    }

    @Override
    public Identity<K8sAccessTokenInfoRecord, Integer> getIdentity() {
        return (Identity<K8sAccessTokenInfoRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<K8sAccessTokenInfoRecord> getPrimaryKey() {
        return Keys.KEY_K8S_ACCESS_TOKEN_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<K8sAccessTokenInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<K8sAccessTokenInfoRecord>>asList(Keys.KEY_K8S_ACCESS_TOKEN_INFO_PRIMARY);
    }

    @Override
    public K8sAccessTokenInfo as(String alias) {
        return new K8sAccessTokenInfo(DSL.name(alias), this);
    }

    @Override
    public K8sAccessTokenInfo as(Name alias) {
        return new K8sAccessTokenInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public K8sAccessTokenInfo rename(String name) {
        return new K8sAccessTokenInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public K8sAccessTokenInfo rename(Name name) {
        return new K8sAccessTokenInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, LocalDateTime, LocalDateTime, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
