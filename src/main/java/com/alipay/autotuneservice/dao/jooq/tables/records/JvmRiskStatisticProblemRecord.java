/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables.records;


import com.alipay.autotuneservice.dao.jooq.tables.JvmRiskStatisticProblem;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JvmRiskStatisticProblemRecord extends TableRecordImpl<JvmRiskStatisticProblemRecord> implements Record8<String, Long, String, String, Long, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.POD_NAME</code>. pod name
     */
    public JvmRiskStatisticProblemRecord setPodName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.POD_NAME</code>. pod name
     */
    public String getPodName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.APP_ID</code>. app id
     */
    public JvmRiskStatisticProblemRecord setAppId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.APP_ID</code>. app id
     */
    public Long getAppId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.APP</code>. app name
     */
    public JvmRiskStatisticProblemRecord setApp(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.APP</code>. app name
     */
    public String getApp() {
        return (String) get(2);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.DT</code>. 天分区
     */
    public JvmRiskStatisticProblemRecord setDt(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.DT</code>. 天分区
     */
    public String getDt() {
        return (String) get(3);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.TIME_STAMP</code>. 修改时间
     */
    public JvmRiskStatisticProblemRecord setTimeStamp(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.TIME_STAMP</code>. 修改时间
     */
    public Long getTimeStamp() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.JVM_STATE</code>. jvm state
     */
    public JvmRiskStatisticProblemRecord setJvmState(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.JVM_STATE</code>. jvm state
     */
    public String getJvmState() {
        return (String) get(5);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.TUNE_MODE</code>. mode. e.g cost
     */
    public JvmRiskStatisticProblemRecord setTuneMode(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.TUNE_MODE</code>. mode. e.g cost
     */
    public String getTuneMode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.CAL_TYPE</code>. calculate type. e.g 1-ONLINE 2-OFFLINE
     */
    public JvmRiskStatisticProblemRecord setCalType(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>TMAESTRO-LITE.JVM_RISK_STATISTIC_PROBLEM.CAL_TYPE</code>. calculate type. e.g 1-ONLINE 2-OFFLINE
     */
    public Long getCalType() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, Long, String, String, Long, String, String, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, Long, String, String, Long, String, String, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return JvmRiskStatisticProblem.JVM_RISK_STATISTIC_PROBLEM.POD_NAME;
    }

    @Override
    public Field<Long> field2() {
        return JvmRiskStatisticProblem.JVM_RISK_STATISTIC_PROBLEM.APP_ID;
    }

    @Override
    public Field<String> field3() {
        return JvmRiskStatisticProblem.JVM_RISK_STATISTIC_PROBLEM.APP;
    }

    @Override
    public Field<String> field4() {
        return JvmRiskStatisticProblem.JVM_RISK_STATISTIC_PROBLEM.DT;
    }

    @Override
    public Field<Long> field5() {
        return JvmRiskStatisticProblem.JVM_RISK_STATISTIC_PROBLEM.TIME_STAMP;
    }

    @Override
    public Field<String> field6() {
        return JvmRiskStatisticProblem.JVM_RISK_STATISTIC_PROBLEM.JVM_STATE;
    }

    @Override
    public Field<String> field7() {
        return JvmRiskStatisticProblem.JVM_RISK_STATISTIC_PROBLEM.TUNE_MODE;
    }

    @Override
    public Field<Long> field8() {
        return JvmRiskStatisticProblem.JVM_RISK_STATISTIC_PROBLEM.CAL_TYPE;
    }

    @Override
    public String component1() {
        return getPodName();
    }

    @Override
    public Long component2() {
        return getAppId();
    }

    @Override
    public String component3() {
        return getApp();
    }

    @Override
    public String component4() {
        return getDt();
    }

    @Override
    public Long component5() {
        return getTimeStamp();
    }

    @Override
    public String component6() {
        return getJvmState();
    }

    @Override
    public String component7() {
        return getTuneMode();
    }

    @Override
    public Long component8() {
        return getCalType();
    }

    @Override
    public String value1() {
        return getPodName();
    }

    @Override
    public Long value2() {
        return getAppId();
    }

    @Override
    public String value3() {
        return getApp();
    }

    @Override
    public String value4() {
        return getDt();
    }

    @Override
    public Long value5() {
        return getTimeStamp();
    }

    @Override
    public String value6() {
        return getJvmState();
    }

    @Override
    public String value7() {
        return getTuneMode();
    }

    @Override
    public Long value8() {
        return getCalType();
    }

    @Override
    public JvmRiskStatisticProblemRecord value1(String value) {
        setPodName(value);
        return this;
    }

    @Override
    public JvmRiskStatisticProblemRecord value2(Long value) {
        setAppId(value);
        return this;
    }

    @Override
    public JvmRiskStatisticProblemRecord value3(String value) {
        setApp(value);
        return this;
    }

    @Override
    public JvmRiskStatisticProblemRecord value4(String value) {
        setDt(value);
        return this;
    }

    @Override
    public JvmRiskStatisticProblemRecord value5(Long value) {
        setTimeStamp(value);
        return this;
    }

    @Override
    public JvmRiskStatisticProblemRecord value6(String value) {
        setJvmState(value);
        return this;
    }

    @Override
    public JvmRiskStatisticProblemRecord value7(String value) {
        setTuneMode(value);
        return this;
    }

    @Override
    public JvmRiskStatisticProblemRecord value8(Long value) {
        setCalType(value);
        return this;
    }

    @Override
    public JvmRiskStatisticProblemRecord values(String value1, Long value2, String value3, String value4, Long value5, String value6, String value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JvmRiskStatisticProblemRecord
     */
    public JvmRiskStatisticProblemRecord() {
        super(JvmRiskStatisticProblem.JVM_RISK_STATISTIC_PROBLEM);
    }

    /**
     * Create a detached, initialised JvmRiskStatisticProblemRecord
     */
    public JvmRiskStatisticProblemRecord(String podName, Long appId, String app, String dt, Long timeStamp, String jvmState, String tuneMode, Long calType) {
        super(JvmRiskStatisticProblem.JVM_RISK_STATISTIC_PROBLEM);

        setPodName(podName);
        setAppId(appId);
        setApp(app);
        setDt(dt);
        setTimeStamp(timeStamp);
        setJvmState(jvmState);
        setTuneMode(tuneMode);
        setCalType(calType);
    }
}
