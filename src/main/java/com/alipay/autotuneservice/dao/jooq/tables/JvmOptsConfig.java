/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables;


import com.alipay.autotuneservice.dao.jooq.Keys;
import com.alipay.autotuneservice.dao.jooq.TmaestroLite;
import com.alipay.autotuneservice.dao.jooq.tables.records.JvmOptsConfigRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JvmOptsConfig extends TableImpl<JvmOptsConfigRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>tmaestro-lite.jvm_opts_config</code>
     */
    public static final JvmOptsConfig JVM_OPTS_CONFIG = new JvmOptsConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JvmOptsConfigRecord> getRecordType() {
        return JvmOptsConfigRecord.class;
    }

    /**
     * The column <code>tmaestro-lite.jvm_opts_config.id</code>.
     */
    public final TableField<JvmOptsConfigRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>tmaestro-lite.jvm_opts_config.jvm_opt</code>.
     */
    public final TableField<JvmOptsConfigRecord, String> JVM_OPT = createField(DSL.name("jvm_opt"), SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>tmaestro-lite.jvm_opts_config.create_time</code>.
     */
    public final TableField<JvmOptsConfigRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

    /**
     * The column <code>tmaestro-lite.jvm_opts_config.update_time</code>.
     */
    public final TableField<JvmOptsConfigRecord, LocalDateTime> UPDATE_TIME = createField(DSL.name("update_time"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

    private JvmOptsConfig(Name alias, Table<JvmOptsConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private JvmOptsConfig(Name alias, Table<JvmOptsConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>tmaestro-lite.jvm_opts_config</code> table reference
     */
    public JvmOptsConfig(String alias) {
        this(DSL.name(alias), JVM_OPTS_CONFIG);
    }

    /**
     * Create an aliased <code>tmaestro-lite.jvm_opts_config</code> table reference
     */
    public JvmOptsConfig(Name alias) {
        this(alias, JVM_OPTS_CONFIG);
    }

    /**
     * Create a <code>tmaestro-lite.jvm_opts_config</code> table reference
     */
    public JvmOptsConfig() {
        this(DSL.name("jvm_opts_config"), null);
    }

    public <O extends Record> JvmOptsConfig(Table<O> child, ForeignKey<O, JvmOptsConfigRecord> key) {
        super(child, key, JVM_OPTS_CONFIG);
    }

    @Override
    public Schema getSchema() {
        return TmaestroLite.TMAESTRO_LITE;
    }

    @Override
    public Identity<JvmOptsConfigRecord, Long> getIdentity() {
        return (Identity<JvmOptsConfigRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<JvmOptsConfigRecord> getPrimaryKey() {
        return Keys.KEY_JVM_OPTS_CONFIG_PRIMARY;
    }

    @Override
    public List<UniqueKey<JvmOptsConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<JvmOptsConfigRecord>>asList(Keys.KEY_JVM_OPTS_CONFIG_PRIMARY);
    }

    @Override
    public JvmOptsConfig as(String alias) {
        return new JvmOptsConfig(DSL.name(alias), this);
    }

    @Override
    public JvmOptsConfig as(Name alias) {
        return new JvmOptsConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JvmOptsConfig rename(String name) {
        return new JvmOptsConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JvmOptsConfig rename(Name name) {
        return new JvmOptsConfig(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
