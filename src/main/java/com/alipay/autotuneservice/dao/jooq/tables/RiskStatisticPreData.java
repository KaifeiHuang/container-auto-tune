/*
 * This file is generated by jOOQ.
 */
package com.alipay.autotuneservice.dao.jooq.tables;


import com.alipay.autotuneservice.dao.jooq.Indexes;
import com.alipay.autotuneservice.dao.jooq.TmaestroLite;
import com.alipay.autotuneservice.dao.jooq.tables.records.RiskStatisticPreDataRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RiskStatisticPreData extends TableImpl<RiskStatisticPreDataRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>TMAESTRO-LITE.RISK_STATISTIC_PRE_DATA</code>
     */
    public static final RiskStatisticPreData RISK_STATISTIC_PRE_DATA = new RiskStatisticPreData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RiskStatisticPreDataRecord> getRecordType() {
        return RiskStatisticPreDataRecord.class;
    }

    /**
     * The column <code>TMAESTRO-LITE.RISK_STATISTIC_PRE_DATA.POD_NAME</code>. pod name
     */
    public final TableField<RiskStatisticPreDataRecord, String> POD_NAME = createField(DSL.name("POD_NAME"), SQLDataType.VARCHAR(64).nullable(false), this, "pod name");

    /**
     * The column <code>TMAESTRO-LITE.RISK_STATISTIC_PRE_DATA.APP_ID</code>. app id
     */
    public final TableField<RiskStatisticPreDataRecord, Long> APP_ID = createField(DSL.name("APP_ID"), SQLDataType.BIGINT.nullable(false), this, "app id");

    /**
     * The column <code>TMAESTRO-LITE.RISK_STATISTIC_PRE_DATA.DT</code>. 天分区
     */
    public final TableField<RiskStatisticPreDataRecord, String> DT = createField(DSL.name("DT"), SQLDataType.VARCHAR(96).nullable(false), this, "天分区");

    /**
     * The column <code>TMAESTRO-LITE.RISK_STATISTIC_PRE_DATA.TIME_STAMP</code>. 时间戳
     */
    public final TableField<RiskStatisticPreDataRecord, Long> TIME_STAMP = createField(DSL.name("TIME_STAMP"), SQLDataType.BIGINT.nullable(false), this, "时间戳");

    /**
     * The column <code>TMAESTRO-LITE.RISK_STATISTIC_PRE_DATA.DATA</code>.
     */
    public final TableField<RiskStatisticPreDataRecord, String> DATA = createField(DSL.name("DATA"), SQLDataType.VARCHAR(512), this, "");

    private RiskStatisticPreData(Name alias, Table<RiskStatisticPreDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private RiskStatisticPreData(Name alias, Table<RiskStatisticPreDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>TMAESTRO-LITE.RISK_STATISTIC_PRE_DATA</code> table reference
     */
    public RiskStatisticPreData(String alias) {
        this(DSL.name(alias), RISK_STATISTIC_PRE_DATA);
    }

    /**
     * Create an aliased <code>TMAESTRO-LITE.RISK_STATISTIC_PRE_DATA</code> table reference
     */
    public RiskStatisticPreData(Name alias) {
        this(alias, RISK_STATISTIC_PRE_DATA);
    }

    /**
     * Create a <code>TMAESTRO-LITE.RISK_STATISTIC_PRE_DATA</code> table reference
     */
    public RiskStatisticPreData() {
        this(DSL.name("RISK_STATISTIC_PRE_DATA"), null);
    }

    public <O extends Record> RiskStatisticPreData(Table<O> child, ForeignKey<O, RiskStatisticPreDataRecord> key) {
        super(child, key, RISK_STATISTIC_PRE_DATA);
    }

    @Override
    public Schema getSchema() {
        return TmaestroLite.TMAESTRO_LITE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RISK_STATISTIC_PRE_DATA_APPID_TIMESTAMP_INDEX);
    }

    @Override
    public RiskStatisticPreData as(String alias) {
        return new RiskStatisticPreData(DSL.name(alias), this);
    }

    @Override
    public RiskStatisticPreData as(Name alias) {
        return new RiskStatisticPreData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RiskStatisticPreData rename(String name) {
        return new RiskStatisticPreData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RiskStatisticPreData rename(Name name) {
        return new RiskStatisticPreData(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, Long, String, Long, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
